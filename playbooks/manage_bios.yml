---
- hosts: myhosts
  name: Manage BIOS
  gather_facts: False

  #         WARNING!             WARNING!             WARNING!
  #
  # Carefully review all tasks and select what you need by using tags.
  # Running *ALL* tasks will have unintended consequences!
  #
  # Updating BIOS settings requires creating a configuration job to implement
  # (which then reboots the system), so pass the 'createbiosconfigjob' tag
  # accordingly.
  #
  # Examples:
  # ansible-playbook manage_bios.yml --tags getattributes
  # ansible-playbook manage_bios.yml --tags "bootmodeuefi,createbiosconfigjob"

  # Commands available:
  #   GetAttributes 		Get BIOS attributes
  #   GetBootOrder 		Get device boot order
  #   SetOneTimeBoot 		Set one-time boot device
  #   SetDefaultSettings 	Set BIOS default settings 
  #   SetAttributes		Set BIOS attributes
  #   CreateConfigJob		Implement new settings

  tasks:

  # --- Get BIOS attributes ------------------------------------------------ 
  - name: Define output file
    include_tasks: set_output_file.yml type=BiosAttributes
    tags: getattributes

  - name: Get attributes
    local_action: >
       redfish category=System command=GetBiosAttributes baseuri={{baseuri}}
       user={{user}} password={{password}}
    register: result
    ignore_errors: yes
    tags: getattributes

  - name: Copy attributes to output file
    local_action: copy content={{ result | to_nice_json }}
       dest={{template}}.json
    tags: getattributes

  # --- Get device boot order ----------------------------------------------
  - name: Define output file
    include_tasks: set_output_file.yml type=BiosBootOrder
    tags: getbootorder

  - name: Get device boot order
    local_action: >
       redfish category=System command=GetBiosBootOrder baseuri={{baseuri}}
       user={{user}} password={{password}}
    register: result
    ignore_errors: yes
    tags: getbootorder

  - name: Copy boot order to output file
    local_action: copy content={{ result | to_nice_json }}
       dest={{template}}.json
    tags: getbootorder

  # ------------------------------------------------------------------------
  - name: Set one-time boot device to {{bootdevice}}
    local_action: >
       redfish category=System command=SetOneTimeBoot baseuri={{baseuri}}
       user={{user}} password={{password}} bootdevice={{bootdevice}}
    ignore_errors: yes
    tags: setonetimebootdevice

  # ------------------------------------------------------------------------
  - name: Set default settings
    local_action: >
       redfish category=System command=SetBiosDefaultSettings baseuri={{baseuri}}
       user={{user}} password={{password}}
    ignore_errors: yes
    tags: setdefaultsettings

  # ------------------------------------------------------------------------
  - name: Set BootMode to UEFI
    local_action: >
       redfish category=System command=SetBiosAttributes
       user={{user}} password={{password}} baseuri={{baseuri}}
       bios_attr_name=BootMode bios_attr_value=Uefi
    tags: bootmodeuefi
    ignore_errors: yes
    
  # ------------------------------------------------------------------------
  - name: Set BootMode to Legacy BIOS
    local_action: >
       redfish category=System command=SetBiosAttributes
       user={{user}} password={{password}} baseuri={{baseuri}}
       bios_attr_name=BootMode bios_attr_value=Bios
    tags: bootmodelegacybios
    ignore_errors: yes
    
  # ------------------------------------------------------------------------
  - name: Create config job - reboot
    local_action: >
      redfish category=System command=CreateBiosConfigJob baseuri={{baseuri}}
      user={{user}} password={{password}}
    tags: createbiosconfigjob
    ignore_errors: yes
